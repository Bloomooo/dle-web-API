stages:
  - build
  - test
  - sonarqube-check
  - sonarqube-vulnerability-report

variables:
  JWT_SECRET_KEY: "${JWT_SECRET_KEY}"

before_script:
  - mkdir -p /root/.m2
  - cp settings.xml /root/.m2/settings.xml
  - echo "JWT_SECRET_KEY=${JWT_SECRET_KEY}" > .env

services:
  - name: mariadb:10.7.8
    alias: db
    command: ["--default-authentication-plugin=mysql_native_password"]
    variables:
      MYSQL_DATABASE: "animedle"
      MYSQL_ROOT_PASSWORD: "root"

build:
  stage: build
  image: maven:3.9.4-eclipse-temurin-21
  script:
    - mvn clean install -DskipTests
  only:
    - merge_requests
    - master
    - main
    - develop

test:
  stage: test
  image: maven:3.9.4-eclipse-temurin-21
  variables:
    SPRING_DATASOURCE_URL: "jdbc:mysql://db:3306/animedle"
    SPRING_DATASOURCE_USERNAME: "root"
    SPRING_DATASOURCE_PASSWORD: "root"
    SPRING_DATASOURCE_DRIVER_CLASS_NAME: "com.mysql.cj.jdbc.Driver"
    SPRING_JPA_HIBERNATE_DDL_AUTO: "update"
    SPRING_APPLICATION_NAME: "backendkiss"
  script:
    - mvn test
  only:
    - merge_requests
    - master
    - main
    - develop
  artifacts:
    paths:
      - target/surefire-reports/
    expire_in: 1 week

sonarqube-check:
  stage: sonarqube-check
  image: maven:3.9.4-eclipse-temurin-21
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
    SPRING_DATASOURCE_URL: "jdbc:mysql://db:3306/animedle"
    SPRING_DATASOURCE_USERNAME: "root"
    SPRING_DATASOURCE_PASSWORD: "root"
    SPRING_DATASOURCE_DRIVER_CLASS_NAME: "com.mysql.cj.jdbc.Driver"
    SPRING_JPA_HIBERNATE_DDL_AUTO: "update"
    SPRING_APPLICATION_NAME: "backendkiss"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - mvn verify sonar:sonar
  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop

sonarqube-vulnerability-report:
  stage: sonarqube-vulnerability-report
  image: ubuntu:focal
  before_script:
    - apt-get update && apt-get install -y curl 
  script:
    - 'curl -u "${SONAR_TOKEN}:" "${SONAR_HOST_URL}/api/issues/gitlab_sast_export?projectKey=kiss_back&branch=${CI_COMMIT_BRANCH}&pullRequest=${CI_MERGE_REQUEST_IID}" -o gl-sast-sonar-report.json'
  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop
  artifacts:
    expire_in: 1 day
    reports:
      sast: gl-sast-sonar-report.json
  dependencies:
    - sonarqube-check
